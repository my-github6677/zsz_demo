@model House.Admin.Web.Models.AdminUserEditGet
@{
    ViewBag.Title = "更新管理员";
}

<div class="pd-20">
    <form class="form form-horizontal" id="form-admin-add">
        <input type="hidden" value="@Model.adminDTO.Id" name="Id" />
        <div class="row cl">
            <label class="form-label col-3"><span class="c-red">*</span>管理员：</label>
            <div class="formControls col-5">
                <input type="text" class="input-text" value="@Model.adminDTO.Name" placeholder="管理员名称" id="user-name" name="Name" datatype="*2-16" nullmsg="管理员不能为空">
            </div>
            <div class="col-4"> </div>
        </div>
        <div class="row cl">
            <label class="form-label col-3"><span class="c-red">*</span>初始密码：</label>
            <div class="formControls col-5">
                <input type="password" placeholder="留空则不更新密码" autocomplete="off" value="" class="input-text" datatype="*0-20" name="newpassword">
            </div>
            <div class="col-4"> </div>
        </div>
        <div class="row cl">
            <label class="form-label col-3"><span class="c-red">*</span>确认密码：</label>
            <div class="formControls col-5">
                <input type="password" placeholder="留空则不更新密码" value="" autocomplete="off" class="input-text" errormsg="您两次输入的新密码不一致！" datatype="*0-20" recheck="newpassword"  name="newpassword2">
            </div>
            <div class="col-4"> </div>
        </div>
        <div class="row cl">
            <label class="form-label col-3"><span class="c-red">*</span>手机：</label>
            <div class="formControls col-5">
                <input type="text" class="input-text" value="@Model.adminDTO.PhoneNum" placeholder="手机号码" id="user-tel" name="phone" datatype="m" nullmsg="手机不能为空">
            </div>
            <div class="col-4"> </div>
        </div>
        <div class="row cl">
            <label class="form-label col-3"><span class="c-red">*</span>邮箱：</label>
            <div class="formControls col-5">
                <input type="text" class="input-text" placeholder="邮箱地址" value="@Model.adminDTO.Email" name="email" id="email" datatype="e" nullmsg="请输入邮箱！">
            </div>
            <div class="col-4"> </div>
        </div>
        <div class="row cl">
            <label class="form-label col-3">城市：</label>
            <div class="formControls col-5">
                <span class="select-box" style="width:150px;">
                    @Html.DropDownList("CityId", new SelectList(Model.cityDTO, "Id", "Name", Model.adminDTO.CityId), new { @class = "select" })
                </span>
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-3">角色：</label>
            <div class="formControls col-9">
                @foreach (var item in Model.roleDTO)
                {
                    <div class="col-xs-12 col-sm-3">
                        <input type="checkbox" id="RoleIds_@item.Id" name="RoleIds" value="@item.Id" checked="@Model.RoleIds.Contains(item.Id)" />
                        <label for="RoleIds_@item.Id">@item.Name</label>
                    </div>
                }
            </div>
            <div class="col-4"> </div>
        </div>
        <div class="row cl">
            <div class="col-9 col-offset-3">
                <input class="btn btn-primary radius" type="button" id="btn_add" value="&nbsp;&nbsp;提交&nbsp;&nbsp;">
            </div>
        </div>
    </form>
</div>
@section foot
{
    <script type="text/javascript">
        $(function () {
            var valf = $("#form-admin-add").Validform({ tiptype: 2 });
            $("#btn_add").click(function () {
                var iform = $("#form-admin-add").serializeArray();
                if (valf.check(false)) {
                    $.ajax({
                        url: "/Admin/Edit",
                        type: "post",
                        data: iform,
                        dataType: "json",
                        success: function (data) {
                            if (data.Status == 'exists') {
                                layer.msg('该手机号码已被注册！', { icon: 2, time: 3000 });
                            }
                            else if (data.Status == 'phone') {
                                layer.msg('请填写手机号码！', { icon: 2, time: 3000 });
                            }
                            else if (data.Status == 'ok') {
                                layer.alert('更新成功！', function () {
                                    var index = parent.layer.getFrameIndex(window.name);
                                    parent.location.reload();
                                    parent.layer.close(index);
                                })
                            }
                            else if (data.Status == 'noroles') {
                                layer.alert('请选择管理员角色');
                            }
                            else if (data.Status == 'no') {
                                layer.alert('更新失败！')
                            }
                            else {
                                layer.alert(data.ErrorMsg);
                            }
                        },
                        error: function () {
                            layer.alert('异常')
                        }
                    })
                }
            })


            $("#user-tel").blur(function () {
                var num = $("#user-tel").val();
                if (num.length > 0) {
                    $.ajax({
                        url: "/Admin/IsExists",
                        type: "post",
                        data: { "phone": num, "adminId":@Model.adminDTO.Id },
                        dataType: "json",
                        success: function (data) {
                            if (data.Status == 'exists') {
                                layer.msg('该手机号码已被注册！', { icon: 2, time: 3000 });
                            }
                            else if (data.Status == 'phone') {
                                layer.msg('请填写手机号码！', { icon: 2, time: 3000 });
                            }
                        },
                        error: function () {
                            layer.alert('异常')
                        }
                    })
                }
            })
        })
    </script>
}